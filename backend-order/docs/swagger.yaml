basePath: /
definitions:
  admin.ProductInput:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  api.CreateOrderRequest:
    properties:
      customer_id:
        type: string
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
    required:
    - customer_id
    - product_id
    - quantity
    type: object
  api.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  api.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.LoginResponse:
    properties:
      token:
        type: string
    type: object
  api.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  api.ResetPasswordRequest:
    properties:
      email:
        type: string
      newPassword:
        minLength: 6
        type: string
      resetToken:
        type: string
    required:
    - email
    - newPassword
    - resetToken
    type: object
  backend.PaymentUpdateRequest:
    properties:
      amount:
        type: number
      order_id:
        type: string
      status:
        type: string
    required:
    - amount
    - order_id
    - status
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      customer_id:
        type: string
      id:
        type: string
      payment_id:
        type: string
      product:
        $ref: '#/definitions/models.OrderProduct'
      quantity:
        type: integer
      status:
        type: string
      timeline:
        items:
          $ref: '#/definitions/models.TimelineEvent'
        type: array
      total_amount:
        type: number
      updated_at:
        type: string
    type: object
  models.OrderProduct:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.Product:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stocks:
        type: integer
    type: object
  models.TimelineEvent:
    properties:
      name:
        type: string
      timestamp:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      isAdmin:
        type: boolean
    type: object
info:
  contact: {}
  description: This is a simple backend server using Go and Gin framework.
  title: Order API
  version: "1.0"
paths:
  /admin/orders:
    get:
      consumes:
      - application/json
      description: Retrieve all orders from all users (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all orders
      tags:
      - admin
      - orders
  /admin/products:
    post:
      consumes:
      - application/json
      description: Create a new product (admin only)
      parameters:
      - description: Product information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/admin.ProductInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product zzz
      tags:
      - admin
      - products
  /admin/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by ID (admin only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - admin
      - products
  /admin/users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all users
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create a new user (admin only)
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Admin
  /admin/users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed information of a specific user (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user details
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update an existing user (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an existing user
      tags:
      - Admin
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Send a password reset token to the user's email
      parameters:
      - description: User's email
        in: body
        name: forgotRequest
        required: true
        schema:
          $ref: '#/definitions/api.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Initiate forgot password process
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration details
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/api.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset a user's password
      parameters:
      - description: Password reset details
        in: body
        name: resetRequest
        required: true
        schema:
          $ref: '#/definitions/api.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset user password
      tags:
      - Authentication
  /backend/payment-update:
    post:
      consumes:
      - application/json
      description: Update the payment status of an order (backend communication)
      parameters:
      - description: Payment update details
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/backend.PaymentUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update order payment status
      tags:
      - Backend
  /health:
    get:
      description: Get a health check message
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
  /orders:
    get:
      description: Get the list of orders for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get my orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create a new order (requires authentication)
      parameters:
      - description: Order details
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/api.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new order
      tags:
      - Orders
  /orders/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel an existing order (requires authentication)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Cancel an order
      tags:
      - Orders
  /products:
    get:
      description: Get the list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get products
      tags:
      - Products
  /products/{id}:
    get:
      description: Get detailed information of a specific product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get product by ID
      tags:
      - Products
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
